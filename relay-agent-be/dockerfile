FROM node:18-alpine AS base


ENV JWT_EXPIRATION_TIME=$JWT_EXPIRATION_TIME
ENV JWT_SECRET=$JWT_SECRET
ENV JWT_ACCESS_TOKEN_EXPIRE=$JWT_ACCESS_TOKEN_EXPIRE
ENV JWT_REFRESH_TOKEN_EXPIRE=$JWT_REFRESH_TOKEN_EXPIRE
ENV ENCRYPT_SECRET_KEY=$ENCRYPT_SECRET_KEY
ENV ENCRYPT_SECRET_IV=$ENCRYPT_SECRET_IV
ENV ENCRYPT_ENCRYPTION_METHOD=$ENCRYPT_ENCRYPTION_METHOD
ENV DEFINED_API_KEY=$DEFINED_API_KEY

RUN apk --update add wget python3 make g++ && rm -rf /var/cache/apk/*
RUN npm install -g pnpm


WORKDIR /app
RUN wget -O global-bundle.pem https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem

FROM base AS dependencies
WORKDIR /app
COPY package.json pnpm-lock.yaml ./
RUN pnpm install



FROM base as build
WORKDIR /app
COPY . .
COPY --from=dependencies /app/node_modules ./node_modules
RUN pnpm run build
RUN pnpm prune --prod

FROM base AS release
WORKDIR /app
COPY --from=build /app/dist ./dist
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/package.json ./package.json
COPY --from=build /app/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=build /app/tsconfig.json ./tsconfig.json
#COPY --from=build /app/.env.example ./.env
COPY --from=build /app/config/default.yaml ./config/default.yaml
CMD ["pnpm", "start", "--port", "3001", "--max-old-space-size=4096"]
